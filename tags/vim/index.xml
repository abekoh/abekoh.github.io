<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on abekoh&#39;s tech note</title>
    <link>https://blog.abekoh.dev/tags/vim/</link>
    <description>Recent content in Vim on abekoh&#39;s tech note</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>© abekoh</copyright>
    <lastBuildDate>Sat, 14 Mar 2020 01:43:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.abekoh.dev/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>fish,tmux,neovim,ghq,pecoで開発スペース構築を快適にする</title>
      <link>https://blog.abekoh.dev/post/prj-command/</link>
      <pubDate>Sat, 14 Mar 2020 01:43:00 +0900</pubDate>
      
      <guid>https://blog.abekoh.dev/post/prj-command/</guid>
      <description>ちょっとしたコード編集とかだったらターミナル上だけで完結させるのが好きでして。 効率よくプロジェクト選択、そのまま編集したりしやすくなる prj というコマンドを自作しています。 また、これに加えて使いやすいように他にも設定盛り込んでます。
なんだかんだ1年以上運用していて、満足しているのでアウトプットしておきます。
環境 次のような環境が必要です
 Neovim  neovim-remote   tmux fish peco  Neovim,tmuxは必須ですが、fish,pecoはzsh,fzfに書き換えても良いと思います。 インストール方法はそれぞれリンク先を参照してください。
デモ わかりにくいかもですが、次のような特徴をみせてます。
 prjで、ghqにより管理されたgitリポジトリをpecoをつかって選択 リポジトリを選択するとそのプロジェクト用のtmuxセッションが開かれ、カレントディレクトリがそのリポジトリ配下になる tmuxセッション内で、Neovimは1タブでしか開けない tmuxセッション内でもう一度prjを実行すると、別のプロジェクトも開ける  次の項でその実現方法を解説します。
解説 prjコマンド ghqとpecoの連携についてはこちらの記事の考えをそのまま使っています。
ghq, peco, hubで快適Gitライフを手に入れよう！ - Qiita
この組み合わせによって、レポジトリ管理・選択が劇的に楽になります。 さらに小細工を入れてtmuxセッションを開くようにしました。
prjコマンドはfish scriptで書いています。こんな感じ
# prj.fish function prj -d &amp;#34;start project&amp;#34; # 引数が設定されていれば、それをpecoにわたす  if test (count $argv) -gt 0 set prjflag --query &amp;#34;$argv&amp;#34; end set PRJ_PATH (ghq root)/(ghq list | peco $prjflag) # プロジェクトが選択されなければ終了  if test -z $PRJ_PATH return end # プロジェクト名は 所有者/リポジトリ名 の形式。その名前に`.</description>
    </item>
    
    <item>
      <title>[Qiita] Slackでスニペットを共有するためのVimプラグインつくってみた</title>
      <link>https://blog.abekoh.dev/post/qiita-snipslack-vim/</link>
      <pubDate>Wed, 11 Dec 2019 23:52:09 +0900</pubDate>
      
      <guid>https://blog.abekoh.dev/post/qiita-snipslack-vim/</guid>
      <description>以前Qiitaに投稿した記事の紹介。
記事: Slackでスニペットを共有するためのVimプラグインつくってみた
GitHub: abekoh/snipslack.vim
VimからSlackのスニペットに、お手軽にポストできるプラグインつくってみた記事です。
2018年の会社の新卒有志Advent Calendarに参加して書きました。
Vimmerとしては一度はプラグインつくってみたい、そんな意欲で書きました。
Vim Scriptにしっかり向き合えて楽しかった。正規表現とか結構独特。業務などに役立つかはさておき。
作ったものの、実は最近はあまり自分でも使っていない。。
社内独自のスニペットサービスが使い勝手優秀で、結局それに頼っています。</description>
    </item>
    
  </channel>
</rss>